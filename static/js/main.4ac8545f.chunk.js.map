{"version":3,"sources":["i18n.js","services/i18n.js","components/Copyright.js","containers/Home.js","pages/404.js","styles/index.js","services/dataProvider/talks.js","containers/Talks.js","routes/index.js","containers/MenuItems.js","pages/Main.js","store/rootReducer.js","store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","keySeparator","interpolation","escapeValue","resources","en","translation","en_translations","es","es_translations","console","log","t","key","opt","i18next","Copyright","Typography","variant","color","align","href","Home","Container","maxWidth","Box","my","component","gutterBottom","NotFound","theme","createMuiTheme","palette","primary","main","useStyles","makeStyles","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","talks","id","description","url","Talks","createCard","talk","classes","props","m","Card","className","CardHeader","subheader","date","CardContent","cards","this","map","React","Component","defaultProps","routes","exact","path","MainDrawerItems","List","ListItem","Link","to","selected","location","pathname","button","ListItemIcon","ListItemText","MainDrawerItemsWithRouter","withRouter","children","useState","open","setOpen","ThemeProvider","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Badge","badgeContent","Drawer","Divider","createRootReducer","history","combineReducers","router","connectRouter","createBrowserHistory","App","fallback","Main","Boolean","window","hostname","match","preloadedState","store","createStore","compose","applyMiddleware","routerMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ac8545f.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport { translation as en_translations } from './static/locales/en/common'\nimport { translation as es_translations }from './static/locales/es/common'\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n        en: { translation:  en_translations },\n        es: { translation:  es_translations }\n    }\n  });\n\nconsole.log(en_translations);\nconsole.log(en_translations[\"page_name\"]);\n\n\nexport default i18n;\n","import i18next from '../i18n';\n\nexport const t = (key, opt) => i18next.t(key, opt);\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport MuiLink from '@material-ui/core/Link';\n\nconst Copyright = () => (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Powered by  '}\n    <MuiLink color=\"inherit\" href=\"https://contraslash.com/\">\n        Contraslash\n    </MuiLink>\n    </Typography>\n);\n\n\nexport default Copyright\n","import React from 'react'\n\nimport {\n  Box,\n  Container,\n  Typography,\n} from '@material-ui/core';\n\n\nimport { t } from '../services/i18n';\n\nimport Copyright from '../components/Copyright';\n\nconst Home = () => {\n  return (\n            <Container maxWidth=\"sm\">\n              <Box my={4}>\n                <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n                  {t('page_name')}\n                </Typography>\n                <Copyright />\n              </Box>\n            </Container>\n  )\n};\n\nexport default Home;\n","import React from 'react';\n\nconst NotFound = () => (\n    <>\n        <h1>\n            Not Found\n        </h1>\n    </>\n);\n\nexport default NotFound;\n","import {createMuiTheme, makeStyles} from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ffffff'\n    },\n\n  }\n});\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n"," const talks = [\n     {\n         id: 1,\n         title: \"My first talk\",\n         description: \"Lorem ipsum asdfasdfgasfasfas\",\n         url: \"http://github.com/contraslash/some_talk\"\n     },\n     {\n         id: 2,\n         title: \"My second talk\",\n         description: \"Lorem ipsum asdfasdfgasfasfas\",\n         url: \"http://github.com/contraslash/some_talk\"\n     },\n ];\n\n export default talks;\n","import React from 'react';\nimport {Box, Card, CardContent, CardHeader, Container, Typography} from '@material-ui/core';\nimport {useStyles} from '../styles';\n\nimport talks from '../services/dataProvider/talks'\n\n\nexport default  class Talks extends React.Component {\n\n    createCard = (talk) => {\n        const {classes} = this.props;\n        return (\n            <Box component=\"span\" m={1} key={talk.id}>\n                <Card className={classes}>\n                    <CardHeader\n                        title={talk.title}\n                        subheader={talk.date}\n                    />\n                    <CardContent>\n                         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                             {talk.description}\n                         </Typography>\n                    </CardContent>\n                </Card>\n            </Box>\n        )\n    };\n\n    render() {\n        const {talks} = this.props;\n        const cards = talks.map(talk => this.createCard(talk));\n        return (\n            <Container>\n                {cards}\n            </Container>\n        )\n    }\n\n};\n\nTalks.defaultProps = {\n    talks: talks\n};\n","import React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router';\n\nimport Home from '../containers/Home';\nimport NotFound from '../pages/404';\nimport Talks from '../containers/Talks';\n\nexport const PATH_HOME = \"/\";\nexport const PATH_TALKS = \"/talks\";\n\nconst routes = (\n    <Switch>\n        <Route exact path={PATH_HOME} component={Home}/>\n        <Route exact path={PATH_TALKS} component={Talks}/>\n        <Route component={NotFound}/>\n    </Switch>\n);\n\nexport default routes;\n","import React from 'react';\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText\n} from '@material-ui/core';\nimport {Link, withRouter} from 'react-router-dom'\n\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\nimport LayersIcon from '@material-ui/icons/Layers';\n\nimport { t } from '../services/i18n';\nimport {PATH_HOME, PATH_TALKS} from '../routes';\n\n\nexport class MainDrawerItems extends React.Component{\n    render() {\n        // console.log(this.props);\n        return  (\n            <List>\n                <ListItem component={Link} to={PATH_HOME} selected={this.props.location.pathname === PATH_HOME} button>\n                    <ListItemIcon>\n                        <GroupWorkIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={t('Home')} />\n                </ListItem>\n                <ListItem component={Link} to={PATH_TALKS} selected={this.props.location.pathname === PATH_TALKS} button>\n                    <ListItemIcon>\n                        <LayersIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={t('Talks')} />\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nexport const MainDrawerItemsWithRouter = withRouter(MainDrawerItems);\n","import React from 'react'\nimport clsx from 'clsx';\n\nimport {\n  AppBar,\n  Badge,\n  CssBaseline,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  Typography,\n  Toolbar,\n} from '@material-ui/core';\n\n\nimport {\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport { t } from '../services/i18n';\n\nimport { MainDrawerItemsWithRouter, MainDrawerItems } from \"../containers/MenuItems\";\nimport { useStyles, theme } from \"../styles\";\n\n\n/* Inspired on https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/dashboard/Dashboard.js */\n\n\nconst Home = (props) => {\n  const { children } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                {t('Mauricio Collazos')}\n              </Typography>\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n              variant=\"permanent\"\n              classes={{\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n              }}\n              open={open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <MainDrawerItemsWithRouter/>\n\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            {children}\n          </main>\n\n\n        </div>\n      </ThemeProvider>\n  )\n};\n\nexport default Home\n","import { combineReducers } from 'redux';\nimport { connectRouter} from 'connected-react-router';\n\nconst createRootReducer = (history) => {\n    return combineReducers(\n        {\n            router: connectRouter(history)\n        }\n    );\n\n};\n\nexport default createRootReducer;\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './rootReducer';\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore(preloadedState) {\n    console.log(\"----history---\");\n    console.log(history);\n    return  createStore(\n        createRootReducer(history),\n        preloadedState,\n        compose(\n            applyMiddleware(\n                routerMiddleware(history)\n            )\n        )\n    );\n}\n","import React, { Suspense } from 'react';\nimport Main from \"./pages/Main\";\nimport { ConnectedRouter } from 'connected-react-router';\nimport {history} from './store/configureStore';\nimport routes from './routes';\n\n\n\nfunction App() {\n  return (\n      <Suspense fallback=\"loading\">\n          <ConnectedRouter history={history}>\n              <Main>\n                  {routes}\n              </Main>\n          </ConnectedRouter>\n      </Suspense>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}