{"version":3,"sources":["i18n.js","services/i18n.js","components/Copyright.js","containers/MenuItems.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","keySeparator","interpolation","escapeValue","resources","en","translation","en_translations","es","es_translations","console","log","t","key","opt","i18next","Copyright","Typography","variant","color","align","href","mainDrawerItems","ListItem","button","ListItemIcon","ListItemText","primary","theme","createMuiTheme","palette","main","useStyles","makeStyles","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Home","classes","React","useState","open","setOpen","clsx","ThemeProvider","className","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Box","my","gutterBottom","App","fallback","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4ZAWAA,IAGGC,IAAIC,KAEJD,IAAIE,KAGJC,KAAK,CACJC,YAAa,KACbC,OAAO,EACPC,cAAc,EACdC,cAAe,CACbC,aAAa,GAEfC,UAAW,CACPC,GAAI,CAAEC,YAAcC,KACpBC,GAAI,CAAEF,YAAcG,QAI5BC,QAAQC,IAAIJ,KACZG,QAAQC,IAAIJ,IAAe,WAGZb,QAAf,EClCakB,EAAI,SAACC,EAAKC,GAAN,OAAcC,EAAQH,EAAEC,EAAKC,I,SCY/BE,EAVG,kBACd,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACnD,eACL,kBAAC,IAAD,CAASD,MAAM,UAAUE,KAAK,4BAA9B,iB,6DCMSC,EACX,6BACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAASf,EAAE,WAE3B,kBAACW,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAASf,EAAE,aCMzBgB,EAAQC,IAAe,CAC3BC,QAAS,CACPH,QAAS,CACPI,KAAM,cAMNC,EAAYC,KAAW,SAAAL,GAAK,MAAK,CACrCM,KAAM,CACJC,QAAS,QAEXC,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNb,EAAMc,OAAON,SAElBO,OAAQ,CACNC,OAAQhB,EAAMgB,OAAOC,OAAS,EAC9BC,WAAYlB,EAAMmB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQrB,EAAMmB,YAAYE,OAAOC,MACjCC,SAAUvB,EAAMmB,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAjCgB,IAkChBC,MAAM,eAAD,OAlCW,IAkCX,OACLT,WAAYlB,EAAMmB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQrB,EAAMmB,YAAYE,OAAOC,MACjCC,SAAUvB,EAAMmB,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBxB,QAAS,QAEXyB,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZT,MApDgB,IAqDhBT,WAAYlB,EAAMmB,YAAYC,OAAO,QAAS,CAC5CC,OAAQrB,EAAMmB,YAAYE,OAAOC,MACjCC,SAAUvB,EAAMmB,YAAYI,SAASK,kBAGzCS,iBAAiB,aACfC,UAAW,SACXpB,WAAYlB,EAAMmB,YAAYC,OAAO,QAAS,CAC5CC,OAAQrB,EAAMmB,YAAYE,OAAOC,MACjCC,SAAUvB,EAAMmB,YAAYI,SAASC,gBAEvCG,MAAO3B,EAAMuC,QAAQ,IACpBvC,EAAMwC,YAAYC,GAAG,MAAQ,CAC5Bd,MAAO3B,EAAMuC,QAAQ,KAGzBG,aAAc1C,EAAMc,OAAON,QAC3BmC,QAAS,CACPV,SAAU,EACVW,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAY/C,EAAMuC,QAAQ,GAC1BS,cAAehD,EAAMuC,QAAQ,IAE/BU,MAAO,CACLpC,QAASb,EAAMuC,QAAQ,GACvBhC,QAAS,OACTsC,SAAU,OACVK,cAAe,UAEjBC,YAAa,CACXP,OAAQ,SA4EGQ,EAvEF,WACX,IAAMC,EAAUjD,IADC,EAEOkD,IAAMC,UAAS,GAFtB,mBAEVC,EAFU,KAEJC,EAFI,KASQC,YAAKL,EAAQJ,MAAOI,EAAQF,aACrD,OACI,kBAACQ,EAAA,EAAD,CAAe3D,MAAOA,GACpB,yBAAK4D,UAAWP,EAAQ/C,MACtB,kBAACuD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQ3B,SAAS,WAAWyB,UAAWF,YAAKL,EAAQtC,OAAQyC,GAAQH,EAAQ5B,cAC1E,kBAACsC,EAAA,EAAD,CAASH,UAAWP,EAAQ7C,SAC1B,kBAACwD,EAAA,EAAD,CACIC,KAAK,QACL1E,MAAM,UACN2E,aAAW,cACXC,QAjBS,WACvBV,GAAQ,IAiBMG,UAAWF,YAAKL,EAAQxB,WAAY2B,GAAQH,EAAQtB,mBAEtD,kBAAC,IAAD,OAEF,kBAAC1C,EAAA,EAAD,CAAY+E,UAAU,KAAK9E,QAAQ,KAAKC,MAAM,UAAU8E,QAAM,EAACT,UAAWP,EAAQrB,OAC/EhD,EAAE,sBAEL,kBAACgF,EAAA,EAAD,CAAYzE,MAAM,WAChB,kBAAC+E,EAAA,EAAD,CAAOC,aAAc,EAAGhF,MAAM,aAC5B,kBAAC,IAAD,UAKR,kBAACiF,EAAA,EAAD,CACIlF,QAAQ,YACR+D,QAAS,CACPJ,MAAOS,YAAKL,EAAQnB,aAAcsB,GAAQH,EAAQhB,mBAEpDmB,KAAMA,GAER,yBAAKI,UAAWP,EAAQ3C,aACtB,kBAACsD,EAAA,EAAD,CAAYG,QArCE,WACxBV,GAAQ,KAqCI,kBAAC,IAAD,QAGJ,kBAACgB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KAAOhF,IAGT,0BAAMkE,UAAWP,EAAQV,SACvB,yBAAKiB,UAAWP,EAAQX,eACxB,kBAACiC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACzF,EAAA,EAAD,CAAYC,QAAQ,KAAK8E,UAAU,KAAKW,cAAY,GACjD/F,EAAE,cAIL,kBAAC,EAAD,YCvKDgG,MAVf,WACE,OAEI,kBAAC,WAAD,CAAUC,SAAS,WACjB,kBAAC,EAAD,QCKYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.6ca337eb.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport { translation as en_translations } from './static/locales/en/common'\nimport { translation as es_translations }from './static/locales/es/common'\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources: {\n        en: { translation:  en_translations },\n        es: { translation:  es_translations }\n    }\n  });\n\nconsole.log(en_translations);\nconsole.log(en_translations[\"page_name\"]);\n\n\nexport default i18n;\n","import i18next from '../i18n';\n\nexport const t = (key, opt) => i18next.t(key, opt);\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport MuiLink from '@material-ui/core/Link';\n\nconst Copyright = () => (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Powered by  '}\n    <MuiLink color=\"inherit\" href=\"https://contraslash.com/\">\n        Contraslash\n    </MuiLink>\n    </Typography>\n);\n\n\nexport default Copyright\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport { t } from '../services/i18n';\n\nexport const mainDrawerItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <GroupWorkIcon />\n      </ListItemIcon>\n      <ListItemText primary={t('Home')} />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary={t('Talks')} />\n    </ListItem>\n  </div>\n);\n","import React from 'react'\nimport clsx from 'clsx';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {ThemeProvider} from \"@material-ui/styles\";\n\nimport { t } from '../services/i18n';\n\nimport Copyright from '../components/Copyright';\nimport { mainDrawerItems } from \"../containers/MenuItems\";\n\n\n/* Inspired on https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/dashboard/Dashboard.js */\n\nconst drawerWidth = 240;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ffffff'\n    },\n\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\n\nconst Home = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n              <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                {t('Mauricio Collazos')}\n              </Typography>\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n              variant=\"permanent\"\n              classes={{\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n              }}\n              open={open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>{mainDrawerItems}</List>\n\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"sm\">\n              <Box my={4}>\n                <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n                  {t('page_name')}\n                </Typography>\n\n\n                <Copyright />\n              </Box>\n            </Container>\n          </main>\n\n\n        </div>\n      </ThemeProvider>\n  )\n};\n\nexport default Home\n","import React, { Suspense } from 'react';\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n\n      <Suspense fallback=\"loading\">\n        <Home />\n      </Suspense>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}